name: Build app package

on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string

jobs:
  setup-matrix:
    runs-on: ${{ inputs.os }}
    outputs:
      node_versions: ${{ steps.generate-matrix.outputs.node_versions }}
    steps:
      - name: Generate matrix
        id: generate-matrix
        run: |
          if [ "${{ inputs.test-only }}" = "true" ]; then
            VERSIONS='["18.x", "20.x"]'
          else
            VERSIONS='["16.x"]'
          fi
          echo ::set-output name=node_versions::"$VERSIONS"
        shell: bash

  build-app-package:
    needs: setup-matrix
    strategy:
      fail-fast: false
      matrix:
        node-version: ${{ fromJSON(needs.setup-matrix.outputs.node_versions) }}
    name: Build app package with Node v${{ matrix.node-version }} on ${{ inputs.os }}
    runs-on: ${{ inputs.os }}

    steps:
      - uses: actions/checkout@v4
        
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm

      - name: Prepare Webpack bundle cache
        id: cache-webpack-bundles
        uses: actions/cache@v4
        with:
          path: ./dist
          key: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}-webpack-${{ inputs.os }}

      - name: Install dependencies
        run: |
          npm ci
          npm i -D electron-builder

      - if: ${{ steps.cache-webpack-bundles.outputs.cache-hit != 'true' }}
        name: Run Webpack
        run: npm run prod

      - name: Build app package
        run: |
          if [ "${{ inputs.os }}" = "ubuntu-latest" ]; then
            echo "Build on Linux is not yet supported."
            exit 1
          elif [ "${{ inputs.os }}" = "macos-latest" ]; then
            if [ "${{ inputs.test-only }}" = "true" ]; then
              npm run build:mac -- --publish never
            else
              npm run build:mac
            fi
          elif [ "${{ inputs.os }}" = "windows-latest" ]; then
            if [ "${{ inputs.test-only }}" = "true" ]; then
              npm run build:win -- --publish never
            else
              npm run build:win
            fi
          fi
        shell: bash
